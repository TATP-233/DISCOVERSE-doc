"use strict";(self.webpackChunkdiscoverse_docs=self.webpackChunkdiscoverse_docs||[]).push([[7560],{2071:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"tutorials/basic-simulation/overview","title":"Basic Simulation Overview","description":"Welcome to the DISCOVERSE Basic Simulation Tutorial! This tutorial will guide you through creating and running robot simulations in DISCOVERSE. DISCOVERSE is a high-fidelity robot simulation platform based on the MuJoCo physics engine and supports 3D Gaussian Splatting rendering technology.","source":"@site/docs/tutorials/basic-simulation/overview.md","sourceDirName":"tutorials/basic-simulation","slug":"/tutorials/basic-simulation/overview","permalink":"/DISCOVERSE-doc/docs/tutorials/basic-simulation/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/TATP-233/DISCOVERSE/tree/main/discoverse-docs/docs/tutorials/basic-simulation/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Troubleshooting Guide","permalink":"/DISCOVERSE-doc/docs/get-started/troubleshooting"},"next":{"title":"Environment Setup","permalink":"/DISCOVERSE-doc/docs/tutorials/basic-simulation/environment-setup"}}');var r=i(4848),l=i(8453);const o={sidebar_position:1},t="Basic Simulation Overview",a={},c=[{value:"\ud83c\udfaf Learning Objectives",id:"-learning-objectives",level:2},{value:"\ud83d\udccb Prerequisites",id:"-prerequisites",level:2},{value:"\ud83c\udfd7\ufe0f DISCOVERSE Architecture",id:"\ufe0f-discoverse-architecture",level:2},{value:"MuJoCo Physics Engine",id:"mujoco-physics-engine",level:3},{value:"3D Gaussian Splatting Rendering",id:"3d-gaussian-splatting-rendering",level:3},{value:"Robot Model Support",id:"robot-model-support",level:3},{value:"Sensor System",id:"sensor-system",level:3},{value:"\ud83d\udcc1 Project Structure",id:"-project-structure",level:2},{value:"\ud83d\udd27 Core Configuration System",id:"-core-configuration-system",level:2},{value:"BaseConfig Class",id:"baseconfig-class",level:3},{value:"Configuration Options Explained",id:"configuration-options-explained",level:3},{value:"Basic Simulation Parameters",id:"basic-simulation-parameters",level:4},{value:"Rendering Parameters",id:"rendering-parameters",level:4},{value:"Sensor Configuration",id:"sensor-configuration",level:4},{value:"Advanced Features",id:"advanced-features",level:4},{value:"\ud83e\udd16 Robot Platforms Overview",id:"-robot-platforms-overview",level:2},{value:"AirbotPlay",id:"airbotplay",level:3},{value:"MMK2 Dual-Arm Mobile Robot",id:"mmk2-dual-arm-mobile-robot",level:3},{value:"LeapHand",id:"leaphand",level:3},{value:"\ud83d\udcca Simulation Workflow",id:"-simulation-workflow",level:2},{value:"Basic Simulation Loop",id:"basic-simulation-loop",level:3},{value:"\ud83c\udfae Interactive Features",id:"-interactive-features",level:2},{value:"Keyboard Controls",id:"keyboard-controls",level:3},{value:"Mouse Controls",id:"mouse-controls",level:3},{value:"Real-time Debugging",id:"real-time-debugging",level:3},{value:"\ud83d\udcc8 Performance Considerations",id:"-performance-considerations",level:2},{value:"Simulation Speed",id:"simulation-speed",level:3},{value:"Memory Usage",id:"memory-usage",level:3},{value:"GPU Acceleration",id:"gpu-acceleration",level:3},{value:"\ud83d\udd0d Debugging Tips",id:"-debugging-tips",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Diagnostic Tools",id:"diagnostic-tools",level:3},{value:"\ud83d\udcda Learning Path",id:"-learning-path",level:2},{value:"\ud83c\udfaf What&#39;s Next?",id:"-whats-next",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"basic-simulation-overview",children:"Basic Simulation Overview"})}),"\n",(0,r.jsx)(n.p,{children:"Welcome to the DISCOVERSE Basic Simulation Tutorial! This tutorial will guide you through creating and running robot simulations in DISCOVERSE. DISCOVERSE is a high-fidelity robot simulation platform based on the MuJoCo physics engine and supports 3D Gaussian Splatting rendering technology."}),"\n",(0,r.jsx)(n.h2,{id:"-learning-objectives",children:"\ud83c\udfaf Learning Objectives"}),"\n",(0,r.jsx)(n.p,{children:"After completing this tutorial, you will be able to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Understand the configuration system and basic architecture of DISCOVERSE"}),"\n",(0,r.jsx)(n.li,{children:"Create and configure robot simulation environments"}),"\n",(0,r.jsx)(n.li,{children:"Use real robot models (such as AirbotPlay, MMK2)"}),"\n",(0,r.jsx)(n.li,{children:"Configure sensors and rendering options"}),"\n",(0,r.jsx)(n.li,{children:"Run basic robot operation tasks"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-prerequisites",children:"\ud83d\udccb Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"Before you begin, please make sure you have:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 Completed the ",(0,r.jsx)(n.a,{href:"/docs/get-started/installation",children:"Installation Guide"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 Run the ",(0,r.jsx)(n.a,{href:"/docs/get-started/quick-start",children:"Quick Start"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 Read the ",(0,r.jsx)(n.a,{href:"/docs/get-started/basic-concepts",children:"Basic Concepts"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-discoverse-architecture",children:"\ud83c\udfd7\ufe0f DISCOVERSE Architecture"}),"\n",(0,r.jsx)(n.p,{children:"DISCOVERSE is built on the following core technologies:"}),"\n",(0,r.jsx)(n.h3,{id:"mujoco-physics-engine",children:"MuJoCo Physics Engine"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"High-precision rigid body dynamics simulation"}),"\n",(0,r.jsx)(n.li,{children:"Supports contact and friction simulation"}),"\n",(0,r.jsx)(n.li,{children:"Real-time physics computation"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3d-gaussian-splatting-rendering",children:"3D Gaussian Splatting Rendering"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"High-fidelity scene rendering"}),"\n",(0,r.jsx)(n.li,{children:"Supports realistic visual effects"}),"\n",(0,r.jsx)(n.li,{children:"Switchable with traditional MuJoCo renderer"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"robot-model-support",children:"Robot Model Support"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"AirbotPlay"}),": 7-DOF robotic arm, suitable for tabletop manipulation tasks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MMK2"}),": Dual-arm mobile robot, supporting complex collaboration tasks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"LeapHand"}),": 16-DOF dexterous hand, enabling fine manipulation"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"sensor-system",children:"Sensor System"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RGB Cameras"}),": Multi-view visual information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Depth Cameras"}),": 3D perception capability"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"LiDAR"}),": High-precision point cloud data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IMU"}),": Inertial measurement units"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tactile Sensors"}),": Force and touch feedback"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-project-structure",children:"\ud83d\udcc1 Project Structure"}),"\n",(0,r.jsx)(n.p,{children:"Understanding DISCOVERSE's directory structure helps you quickly locate required files:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"DISCOVERSE/\n\u251c\u2500\u2500 discoverse/                    # Core simulation framework\n\u2502   \u251c\u2500\u2500 envs/                     # Environment definitions\n\u2502   \u251c\u2500\u2500 robots/                   # Robot model interfaces\n\u2502   \u251c\u2500\u2500 sensors/                  # Sensor implementations\n\u2502   \u2514\u2500\u2500 utils/                    # Utility functions\n\u251c\u2500\u2500 mjcf/                         # MuJoCo scene description files\n\u2502   \u251c\u2500\u2500 robots/                   # Robot MJCF files\n\u2502   \u251c\u2500\u2500 objects/                  # Object models\n\u2502   \u2514\u2500\u2500 tasks/                    # Task scene files\n\u251c\u2500\u2500 models/                       # 3D models and assets\n\u2502   \u251c\u2500\u2500 meshes/                   # Mesh files (.obj, .stl)\n\u2502   \u251c\u2500\u2500 3dgs/                     # 3D Gaussian Splatting models\n\u2502   \u2514\u2500\u2500 textures/                 # Texture files\n\u251c\u2500\u2500 examples/                     # Example scripts\n\u2502   \u251c\u2500\u2500 robots/                   # Basic robot examples\n\u2502   \u251c\u2500\u2500 tasks_airbot_play/       # AirbotPlay task examples\n\u2502   \u251c\u2500\u2500 tasks_mmk2/              # MMK2 task examples\n\u2502   \u2514\u2500\u2500 mocap_ik/                # Inverse kinematics examples\n\u251c\u2500\u2500 scripts/                      # Utility scripts\n\u2514\u2500\u2500 data/                        # Generated data storage\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-core-configuration-system",children:"\ud83d\udd27 Core Configuration System"}),"\n",(0,r.jsx)(n.p,{children:"DISCOVERSE uses a unified configuration system to manage simulation parameters:"}),"\n",(0,r.jsx)(n.h3,{id:"baseconfig-class",children:"BaseConfig Class"}),"\n",(0,r.jsx)(n.p,{children:"The core configuration class contains all simulation settings:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from discoverse.envs import BaseConfig\n\n# Create basic configuration\ncfg = BaseConfig()\n\n# Core simulation parameters\ncfg.mjcf_file_path = "mjcf/robots/airbot_play.xml"  # Scene file\ncfg.timestep = 0.002                                # Physics timestep\ncfg.decimation = 10                                 # Control decimation\ncfg.sync = True                                     # Real-time sync\ncfg.headless = False                                # Show GUI\n\n# Rendering configuration\ncfg.render_set = {\n    "fps": 30,        # Frame rate\n    "width": 640,     # Image width\n    "height": 480     # Image height\n}\n\n# Sensor configuration\ncfg.obs_rgb_cam_id = [0, 1]      # RGB camera IDs\ncfg.obs_depth_cam_id = [0]       # Depth camera IDs\n\n# High-fidelity rendering (optional)\ncfg.use_gaussian_renderer = False\n'})}),"\n",(0,r.jsx)(n.h3,{id:"configuration-options-explained",children:"Configuration Options Explained"}),"\n",(0,r.jsx)(n.h4,{id:"basic-simulation-parameters",children:"Basic Simulation Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"mjcf_file_path"})}),": Path to MuJoCo scene file (.xml or .mjb)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"timestep"})}),": Physics simulation time step (typically 0.001-0.002 seconds)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"decimation"})}),": Control frequency reduction factor (actual control rate = 1/(timestep \xd7 decimation))"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"sync"})}),": Enable real-time synchronization (useful for teleoperation)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"headless"})}),": Run without GUI (useful for data generation or server deployment)"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"rendering-parameters",children:"Rendering Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"render_set"})}),": Dictionary containing rendering settings","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fps"}),": Target frame rate for visualization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"width"}),"/",(0,r.jsx)(n.code,{children:"height"}),": Rendered image dimensions"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"sensor-configuration",children:"Sensor Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"obs_rgb_cam_id"})}),": List of RGB camera IDs to use for observations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"obs_depth_cam_id"})}),": List of depth camera IDs to use for observations"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"use_gaussian_renderer"})}),": Enable 3D Gaussian Splatting for high-fidelity rendering"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"rb_link_list"})}),": Robot body names (for 3DGS rendering)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"obj_list"})}),": Interactive object names (for 3DGS rendering)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"gs_model_dict"})}),": Mapping from body names to 3DGS model paths"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-robot-platforms-overview",children:"\ud83e\udd16 Robot Platforms Overview"}),"\n",(0,r.jsx)(n.h3,{id:"airbotplay",children:"AirbotPlay"}),"\n",(0,r.jsx)(n.p,{children:"A 7-DOF robotic arm perfect for learning and tabletop manipulation:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Specifications:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"7 degrees of freedom"}),"\n",(0,r.jsx)(n.li,{children:"Parallel gripper"}),"\n",(0,r.jsx)(n.li,{children:"Reach: ~65cm"}),"\n",(0,r.jsx)(n.li,{children:"Payload: 1kg"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Pick and place tasks"}),"\n",(0,r.jsx)(n.li,{children:"Object manipulation"}),"\n",(0,r.jsx)(n.li,{children:"Basic learning algorithms"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Configuration:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'cfg.mjcf_file_path = "mjcf/robots/airbot_play.xml"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"mmk2-dual-arm-mobile-robot",children:"MMK2 Dual-Arm Mobile Robot"}),"\n",(0,r.jsx)(n.p,{children:"A sophisticated dual-arm mobile platform for complex tasks:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Specifications:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Dual 7-DOF arms"}),"\n",(0,r.jsx)(n.li,{children:"Mobile base with omnidirectional wheels"}),"\n",(0,r.jsx)(n.li,{children:"Stereo cameras"}),"\n",(0,r.jsx)(n.li,{children:"Lift mechanism"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Multi-object manipulation"}),"\n",(0,r.jsx)(n.li,{children:"Mobile manipulation"}),"\n",(0,r.jsx)(n.li,{children:"Collaboration tasks"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Configuration:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'cfg.mjcf_file_path = "mjcf/robots/mmk2.xml"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"leaphand",children:"LeapHand"}),"\n",(0,r.jsx)(n.p,{children:"A 16-DOF dexterous hand for fine manipulation:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Specifications:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"16 degrees of freedom"}),"\n",(0,r.jsx)(n.li,{children:"4 fingers with tactile sensing"}),"\n",(0,r.jsx)(n.li,{children:"High dexterity for complex grasping"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Dexterous manipulation"}),"\n",(0,r.jsx)(n.li,{children:"In-hand manipulation"}),"\n",(0,r.jsx)(n.li,{children:"Object reorientation"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-simulation-workflow",children:"\ud83d\udcca Simulation Workflow"}),"\n",(0,r.jsx)(n.p,{children:"A typical simulation workflow in DISCOVERSE follows these steps:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Environment Setup"}),": Configure robot, scene, and sensors"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Initialization"}),": Load models and initialize physics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Control Loop"}),": Execute actions and collect observations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Collection"}),": Save trajectories and sensor data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Analysis"}),": Process and analyze results"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"basic-simulation-loop",children:"Basic Simulation Loop"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import discoverse\n\n# 1. Create environment\nenv = discoverse.make("AirbotPlayManipulation")\n\n# 2. Reset environment\nobs = env.reset()\n\n# 3. Run simulation loop\nfor step in range(1000):\n    # Generate action (random or from policy)\n    action = env.action_space.sample()\n    \n    # Execute action\n    obs, reward, done, info = env.step(action)\n    \n    # Check if episode finished\n    if done:\n        obs = env.reset()\n\nenv.close()\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-interactive-features",children:"\ud83c\udfae Interactive Features"}),"\n",(0,r.jsx)(n.p,{children:"DISCOVERSE provides rich interactive features for development and debugging:"}),"\n",(0,r.jsx)(n.h3,{id:"keyboard-controls",children:"Keyboard Controls"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Basic Controls"}),": Help (h), Reset (r), Reload scene (F5)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"View Controls"}),": Camera switching ([/]), Free camera (Esc)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rendering"}),": Toggle Gaussian rendering (Ctrl+g), Depth view (Ctrl+d)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"mouse-controls",children:"Mouse Controls"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Left Drag"}),": Rotate camera view"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Right Drag"}),": Pan camera view"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scroll Wheel"}),": Zoom in/out"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"real-time-debugging",children:"Real-time Debugging"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Print States"}),": Press 'p' to print robot joint states and poses"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Visual Markers"}),": Add visual markers for debugging kinematics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sensor Visualization"}),": Real-time display of camera and LiDAR data"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-performance-considerations",children:"\ud83d\udcc8 Performance Considerations"}),"\n",(0,r.jsx)(n.h3,{id:"simulation-speed",children:"Simulation Speed"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Physics Timestep"}),": Smaller timesteps increase accuracy but reduce speed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Decimation"}),": Higher decimation reduces control frequency but improves performance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Headless Mode"}),": Disable GUI for faster data generation"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"memory-usage",children:"Memory Usage"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"3DGS Models"}),": Can be memory-intensive; adjust quality settings as needed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sensor Data"}),": Large images/point clouds can consume significant memory"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Batch Processing"}),": Process data in batches for large datasets"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"gpu-acceleration",children:"GPU Acceleration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"3DGS Rendering"}),": Requires CUDA-capable GPU"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"LiDAR Simulation"}),": Benefits from GPU acceleration with Taichi"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parallel Environments"}),": Multiple environments can share GPU resources"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-debugging-tips",children:"\ud83d\udd0d Debugging Tips"}),"\n",(0,r.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scene Loading Errors"}),": Check MJCF file paths and model references"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rendering Problems"}),": Verify GPU drivers and CUDA installation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Physics Instability"}),": Adjust timestep and contact parameters"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance Issues"}),": Profile bottlenecks and optimize accordingly"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"diagnostic-tools",children:"Diagnostic Tools"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"check_installation.py"})}),": Verify system setup"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Verbose Logging"}),": Enable detailed logging for debugging"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Visual Debugging"}),": Use wireframe and collision visualization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Profiling"}),": Monitor CPU/GPU usage and memory consumption"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-learning-path",children:"\ud83d\udcda Learning Path"}),"\n",(0,r.jsx)(n.p,{children:"To master DISCOVERSE basic simulation, we recommend following this learning path:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/DISCOVERSE-doc/docs/tutorials/basic-simulation/environment-setup",children:"Environment Setup"})})," - Configure your first simulation environment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/DISCOVERSE-doc/docs/tutorials/basic-simulation/robot-control",children:"Robot Control"})})," - Learn robot control interfaces and kinematics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/DISCOVERSE-doc/docs/tutorials/sensors/overview",children:"Sensor Integration"})})," - Add sensors and process data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"../tasks/overview.md",children:"Task Design"})})," - Create custom manipulation tasks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"../advanced/overview.md",children:"Advanced Features"})})," - Explore 3DGS rendering and advanced capabilities"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-whats-next",children:"\ud83c\udfaf What's Next?"}),"\n",(0,r.jsx)(n.p,{children:"After completing this overview, you're ready to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Set up your first custom simulation environment"}),"\n",(0,r.jsx)(n.li,{children:"Learn detailed robot control mechanisms"}),"\n",(0,r.jsx)(n.li,{children:"Integrate sensors for perception tasks"}),"\n",(0,r.jsx)(n.li,{children:"Explore advanced rendering capabilities"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Let's start with ",(0,r.jsx)(n.a,{href:"/DISCOVERSE-doc/docs/tutorials/basic-simulation/environment-setup",children:"Environment Setup"})," to begin your hands-on journey with DISCOVERSE!"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"This tutorial provides a comprehensive foundation for robot simulation in DISCOVERSE. Each subsequent section will dive deeper into specific aspects of the framework."})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>t});var s=i(6540);const r={},l=s.createContext(r);function o(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);