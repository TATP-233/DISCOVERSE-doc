"use strict";(self.webpackChunkdiscoverse_docs=self.webpackChunkdiscoverse_docs||[]).push([[7151],{1878:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"tutorials/modeling/xml-editor","title":"XML Editor","description":"1. Introduction","source":"@site/docs/tutorials/modeling/xml-editor.md","sourceDirName":"tutorials/modeling","slug":"/tutorials/modeling/xml-editor","permalink":"/DISCOVERSE-doc/docs/tutorials/modeling/xml-editor","draft":false,"unlisted":false,"editUrl":"https://github.com/TATP-233/DISCOVERSE/tree/main/discoverse-docs/docs/tutorials/modeling/xml-editor.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Gaussian Splatting","permalink":"/DISCOVERSE-doc/docs/tutorials/modeling/gaussian-splatting"},"next":{"title":"Domain Randomization Techniques","permalink":"/DISCOVERSE-doc/docs/tutorials/data-generation/domain-randomization"}}');var s=n(4848),t=n(8453);const o={sidebar_position:4},r="XML Editor",a={},d=[{value:"1. Introduction",id:"1-introduction",level:2},{value:"1.1 What is the MuJoCo Scene XML Editor?",id:"11-what-is-the-mujoco-scene-xml-editor",level:3},{value:"1.2 Position in DISCOVERSE",id:"12-position-in-discoverse",level:3},{value:"1.3 MuJoCo and MJCF Overview",id:"13-mujoco-and-mjcf-overview",level:3},{value:"2. Features",id:"2-features",level:2},{value:"3. Installation Guide",id:"3-installation-guide",level:2},{value:"3.1 System Requirements",id:"31-system-requirements",level:3},{value:"3.2 Dependencies",id:"32-dependencies",level:3},{value:"3.3 Installation Steps",id:"33-installation-steps",level:3},{value:"4. Launch &amp; Interface Overview",id:"4-launch--interface-overview",level:2},{value:"4.1 Launch",id:"41-launch",level:3},{value:"4.2 Main Interface",id:"42-main-interface",level:3},{value:"5. Usage Details",id:"5-usage-details",level:2},{value:"5.1 Scene Navigation",id:"51-scene-navigation",level:3},{value:"5.2 Create Geometry",id:"52-create-geometry",level:3},{value:"5.3 Object Selection &amp; Editing",id:"53-object-selection--editing",level:3},{value:"5.4 Transformation Tools (Gizmo)",id:"54-transformation-tools-gizmo",level:3},{value:"5.5 Hierarchy Management",id:"55-hierarchy-management",level:3},{value:"5.6 Menu Bar Functions",id:"56-menu-bar-functions",level:3},{value:"5.7 Undo/Redo",id:"57-undoredo",level:3},{value:"5.8 Save Points (JSON)",id:"58-save-points-json",level:3},{value:"6. Example Workflow",id:"6-example-workflow",level:2}];function c(e){const i={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"xml-editor",children:"XML Editor"})}),"\n",(0,s.jsx)(i.h1,{id:"mujoco-scene-xml-editor-discoverse-module",children:"MuJoCo Scene XML Editor (DISCOVERSE Module)"}),"\n",(0,s.jsx)(i.h2,{id:"1-introduction",children:"1. Introduction"}),"\n",(0,s.jsx)(i.h3,{id:"11-what-is-the-mujoco-scene-xml-editor",children:"1.1 What is the MuJoCo Scene XML Editor?"}),"\n",(0,s.jsx)(i.p,{children:"The MuJoCo Scene XML Editor is a graphical tool based on PyQt5 and OpenGL, dedicated to creating and editing scene description files for the MuJoCo physics engine (Multi-Joint dynamics with Contact). MuJoCo uses the MJCF (MuJoCo XML Format) to define bodies, robots, lighting, textures, and physical properties in simulation environments."}),"\n",(0,s.jsx)(i.p,{children:"The editor provides an intuitive 3D visual interface, allowing users to:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Visually build scenes in 3D"}),"\n",(0,s.jsx)(i.li,{children:"Edit object properties (size, mass, color, collision, etc.)"}),"\n",(0,s.jsx)(i.li,{children:"Manage scene hierarchy"}),"\n",(0,s.jsx)(i.li,{children:"Import/export MJCF files"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Compared to manual MJCF XML coding, this editor greatly simplifies scene creation and tuning, especially for rapid iteration and visual validation."}),"\n",(0,s.jsx)(i.h3,{id:"12-position-in-discoverse",children:"1.2 Position in DISCOVERSE"}),"\n",(0,s.jsxs)(i.p,{children:["This editor is a key submodule in DISCOVERSE, located at ",(0,s.jsx)(i.code,{children:"submodules/XML-Editor/"}),". It enables efficient scene setup and modification for robotics simulation tasks."]}),"\n",(0,s.jsx)(i.h3,{id:"13-mujoco-and-mjcf-overview",children:"1.3 MuJoCo and MJCF Overview"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"MuJoCo"}),": A powerful, fast, and accurate physics engine widely used in robotics, biomechanics, and machine learning."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"MJCF"}),": A hierarchical XML format for describing simulation scenes, including bodies, geometries, joints, sensors, actuators, and more."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"2-features",children:"2. Features"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Visual editing: Real-time 3D preview"}),"\n",(0,s.jsx)(i.li,{children:"Basic geometry support: box, sphere, cylinder, capsule, plane"}),"\n",(0,s.jsx)(i.li,{children:"Transformation tools: translate, rotate, scale (global/local coordinates)"}),"\n",(0,s.jsx)(i.li,{children:"Property editing: size, position, rotation, color, opacity, etc."}),"\n",(0,s.jsx)(i.li,{children:"Hierarchy management: parent-child relationships, grouping, reparenting"}),"\n",(0,s.jsx)(i.li,{children:"Import/export MJCF XML"}),"\n",(0,s.jsx)(i.li,{children:"Ray picking system for precise selection"}),"\n",(0,s.jsx)(i.li,{children:"Custom gizmo controls for 3D manipulation"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"3-installation-guide",children:"3. Installation Guide"}),"\n",(0,s.jsx)(i.h3,{id:"31-system-requirements",children:"3.1 System Requirements"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"OS: Windows / macOS / Linux"}),"\n",(0,s.jsx)(i.li,{children:"Python >= 3.7"}),"\n",(0,s.jsx)(i.li,{children:"Graphics card supporting OpenGL 3.3+"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"32-dependencies",children:"3.2 Dependencies"}),"\n",(0,s.jsx)(i.p,{children:"Install the following Python libraries:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"PyQt5 >= 5.15.0"}),"\n",(0,s.jsx)(i.li,{children:"NumPy >= 1.20.0"}),"\n",(0,s.jsx)(i.li,{children:"PyOpenGL >= 3.1.0"}),"\n",(0,s.jsx)(i.li,{children:"PyOpenGL_accelerate >= 3.1.0 (optional, recommended)"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"33-installation-steps",children:"3.3 Installation Steps"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Ensure the submodule is initialized:"}),"\n"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:"git submodule update --init --recursive\n"})}),"\n",(0,s.jsxs)(i.ol,{start:"2",children:["\n",(0,s.jsx)(i.li,{children:"Enter the submodule directory and install dependencies:"}),"\n"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:"cd submodules/XML-Editor\npip install -r requirements.txt\n"})}),"\n",(0,s.jsx)(i.h2,{id:"4-launch--interface-overview",children:"4. Launch & Interface Overview"}),"\n",(0,s.jsx)(i.h3,{id:"41-launch",children:"4.1 Launch"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:"python -m xml_editor.main\n"})}),"\n",(0,s.jsx)(i.h3,{id:"42-main-interface",children:"4.2 Main Interface"}),"\n",(0,s.jsx)(i.p,{children:"The editor window includes:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"3D view (center): display and interact with the MuJoCo scene"}),"\n",(0,s.jsx)(i.li,{children:"Control panel (left): create geometry, select operation mode, coordinate system, save management"}),"\n",(0,s.jsx)(i.li,{children:"Hierarchy panel (left): tree view of scene objects and parent-child relationships"}),"\n",(0,s.jsx)(i.li,{children:"Properties panel (right): detailed properties of selected object"}),"\n",(0,s.jsx)(i.li,{children:"Menu bar (top): file operations, edit, view, help"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"5-usage-details",children:"5. Usage Details"}),"\n",(0,s.jsx)(i.h3,{id:"51-scene-navigation",children:"5.1 Scene Navigation"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Rotate view: left mouse drag"}),"\n",(0,s.jsx)(i.li,{children:"Pan view: right mouse drag"}),"\n",(0,s.jsx)(i.li,{children:"Zoom: mouse wheel"}),"\n",(0,s.jsx)(i.li,{children:"Deselect: click empty space or press Esc"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"52-create-geometry",children:"5.2 Create Geometry"}),"\n",(0,s.jsx)(i.p,{children:"Drag geometry buttons from the control panel into the 3D view to create objects (box, sphere, etc.)."}),"\n",(0,s.jsx)(i.h3,{id:"53-object-selection--editing",children:"5.3 Object Selection & Editing"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Select: left-click in 3D view or hierarchy tree"}),"\n",(0,s.jsx)(i.li,{children:"Multi-select: Ctrl+click"}),"\n",(0,s.jsx)(i.li,{children:"View/edit properties: right panel"}),"\n",(0,s.jsx)(i.li,{children:"Edit properties: directly modify values (name, position, rotation, size, color, opacity)"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"54-transformation-tools-gizmo",children:"5.4 Transformation Tools (Gizmo)"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Select operation mode: observe, translate, rotate, scale"}),"\n",(0,s.jsx)(i.li,{children:"Use gizmo handles to manipulate objects in 3D"}),"\n",(0,s.jsx)(i.li,{children:"Switch between global/local coordinates"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"55-hierarchy-management",children:"5.5 Hierarchy Management"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Tree view for parent-child relationships"}),"\n",(0,s.jsx)(i.li,{children:"Grouping, reparenting, copy/paste, delete, rename"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"56-menu-bar-functions",children:"5.6 Menu Bar Functions"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"File: new, open, save, save as, exit"}),"\n",(0,s.jsx)(i.li,{children:"Edit: undo, redo, copy, paste, delete"}),"\n",(0,s.jsx)(i.li,{children:"View: reset view"}),"\n",(0,s.jsx)(i.li,{children:"Help: about"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"57-undoredo",children:"5.7 Undo/Redo"}),"\n",(0,s.jsx)(i.p,{children:"Most operations are recorded for undo/redo. History is cleared on exit."}),"\n",(0,s.jsx)(i.h3,{id:"58-save-points-json",children:"5.8 Save Points (JSON)"}),"\n",(0,s.jsx)(i.p,{children:"Quickly create temporary save points in JSON format for rapid scene iteration."}),"\n",(0,s.jsx)(i.h2,{id:"6-example-workflow",children:"6. Example Workflow"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Launch editor"}),"\n",(0,s.jsx)(i.li,{children:"Create ground plane and objects"}),"\n",(0,s.jsx)(i.li,{children:"Transform objects using gizmo"}),"\n",(0,s.jsx)(i.li,{children:"Manage hierarchy and group objects"}),"\n",(0,s.jsx)(i.li,{children:"Edit properties"}),"\n",(0,s.jsx)(i.li,{children:"Save scene as MJCF XML"}),"\n",(0,s.jsx)(i.li,{children:"(Optional) Create/load save points"}),"\n",(0,s.jsx)(i.li,{children:"Load MJCF into MuJoCo for validation"}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.em,{children:"We hope this guide helps you use the MuJoCo Scene XML Editor effectively in DISCOVERSE!"})})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>r});var l=n(6540);const s={},t=l.createContext(s);function o(e){const i=l.useContext(t);return l.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),l.createElement(t.Provider,{value:i},e.children)}}}]);