"use strict";(self.webpackChunkdiscoverse_docs=self.webpackChunkdiscoverse_docs||[]).push([[6421],{397:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"tutorials/sensors/overview","title":"Sensors Overview","description":"DISCOVERSE provides rich sensor support, including RGB cameras, depth cameras, stereo cameras, and more. This tutorial will guide you through configuring and using various sensors in DISCOVERSE.","source":"@site/docs/tutorials/sensors/overview.md","sourceDirName":"tutorials/sensors","slug":"/tutorials/sensors/overview","permalink":"/docs/tutorials/sensors/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/TATP-233/DISCOVERSE/tree/main/discoverse-docs/docs/tutorials/sensors/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Robot Control","permalink":"/docs/tutorials/basic-simulation/robot-control"},"next":{"title":"Stereo Camera Simulation Details","permalink":"/docs/tutorials/sensors/stereo-camera"}}');var i=r(4848),t=r(8453);const o={sidebar_position:1},a="Sensors Overview",c={},d=[{value:"\ud83c\udfaf Learning Objectives",id:"-learning-objectives",level:2},{value:"\ud83d\udcf7 Supported Sensor Types",id:"-supported-sensor-types",level:2},{value:"RGB Camera",id:"rgb-camera",level:3},{value:"Depth Camera",id:"depth-camera",level:3},{value:"Stereo Camera System",id:"stereo-camera-system",level:3}];function l(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"sensors-overview",children:"Sensors Overview"})}),"\n",(0,i.jsx)(s.p,{children:"DISCOVERSE provides rich sensor support, including RGB cameras, depth cameras, stereo cameras, and more. This tutorial will guide you through configuring and using various sensors in DISCOVERSE."}),"\n",(0,i.jsx)(s.h2,{id:"-learning-objectives",children:"\ud83c\udfaf Learning Objectives"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Understand the types of sensors supported by DISCOVERSE"}),"\n",(0,i.jsx)(s.li,{children:"Master sensor configuration methods"}),"\n",(0,i.jsx)(s.li,{children:"Learn the API for acquiring sensor data"}),"\n",(0,i.jsx)(s.li,{children:"Understand stereo vision and depth perception"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"-supported-sensor-types",children:"\ud83d\udcf7 Supported Sensor Types"}),"\n",(0,i.jsx)(s.h3,{id:"rgb-camera",children:"RGB Camera"}),"\n",(0,i.jsx)(s.p,{children:"Provides color image observation and supports multi-camera configuration:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"# Configure RGB camera (must be set explicitly, default is None)\nconfig.obs_rgb_cam_id = [0, 1, 2]  # List of camera IDs\n\n# Get RGB image\nrgb_image = sim.getRgbImg(cam_id=0)  # Returns (H, W, 3) numpy array\n"})}),"\n",(0,i.jsx)(s.h3,{id:"depth-camera",children:"Depth Camera"}),"\n",(0,i.jsx)(s.p,{children:"Obtain depth information of the scene:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"# Configure depth camera\nconfig.obs_depth_cam_id = [0, 1]  # List of depth camera IDs\n\n# Get depth image\ndepth_image = sim.getDepthImg(cam_id=0)  # Returns (H, W) numpy array\n"})}),"\n",(0,i.jsx)(s.h3,{id:"stereo-camera-system",children:"Stereo Camera System"}),"\n",(0,i.jsx)(s.p,{children:"DISCOVERSE supports high-precision stereo camera simulation for depth perception and 3D reconstruction:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Binocular camera configuration"}),": Simulate real stereo camera systems"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Disparity calculation"}),": Automatically compute disparity between left and right images"]}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>o,x:()=>a});var n=r(6540);const i={},t=n.createContext(i);function o(e){const s=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);