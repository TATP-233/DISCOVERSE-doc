"use strict";(self.webpackChunkdiscoverse_docs=self.webpackChunkdiscoverse_docs||[]).push([[5810],{8334:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"tutorials/modeling/mesh2mjcf","title":"Mesh2MJCF","description":"1. Introduction","source":"@site/docs/tutorials/modeling/mesh2mjcf.md","sourceDirName":"tutorials/modeling","slug":"/tutorials/modeling/mesh2mjcf","permalink":"/DISCOVERSE-doc/docs/tutorials/modeling/mesh2mjcf","draft":false,"unlisted":false,"editUrl":"https://github.com/TATP-233/DISCOVERSE/tree/main/discoverse-docs/docs/tutorials/modeling/mesh2mjcf.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Modeling Overview","permalink":"/DISCOVERSE-doc/docs/tutorials/modeling/overview"},"next":{"title":"Gaussian Splatting","permalink":"/DISCOVERSE-doc/docs/tutorials/modeling/gaussian-splatting"}}');var o=s(4848),l=s(8453);const t={sidebar_position:2},c="Mesh2MJCF",r={},d=[{value:"1. Introduction",id:"1-introduction",level:2},{value:"1.1 What is a Mesh?",id:"11-what-is-a-mesh",level:3},{value:"1.2 What is MJCF?",id:"12-what-is-mjcf",level:3},{value:"2. Physical Concepts",id:"2-physical-concepts",level:2},{value:"2.1 Mass",id:"21-mass",level:3},{value:"2.2 Inertia Tensor",id:"22-inertia-tensor",level:3},{value:"3. Convex Decomposition",id:"3-convex-decomposition",level:2},{value:"3.1 What is Convex Decomposition?",id:"31-what-is-convex-decomposition",level:3},{value:"3.2 In MuJoCo",id:"32-in-mujoco",level:3},{value:"4. MTL Material and Multi-material Support",id:"4-mtl-material-and-multi-material-support",level:2},{value:"5. Dependencies",id:"5-dependencies",level:2},{value:"6. Usage",id:"6-usage",level:2},{value:"7. Examples",id:"7-examples",level:2},{value:"8. Output Files",id:"8-output-files",level:2}];function a(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"mesh2mjcf",children:"Mesh2MJCF"})}),"\n",(0,o.jsx)(i.h1,{id:"mesh2mjcf-tool-documentation",children:"Mesh2MJCF Tool Documentation"}),"\n",(0,o.jsx)(i.h2,{id:"1-introduction",children:"1. Introduction"}),"\n",(0,o.jsx)(i.h3,{id:"11-what-is-a-mesh",children:"1.1 What is a Mesh?"}),"\n",(0,o.jsx)(i.p,{children:"A mesh is a representation of a 3D model, composed of vertices, edges, and faces. Common mesh file formats include:"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsx)(i.li,{children:"OBJ: A simple 3D model format supporting vertices, texture coordinates, normals, and multiple materials."}),"\n",(0,o.jsx)(i.li,{children:"STL: Commonly used for 3D printing, contains only triangle face information."}),"\n"]}),"\n",(0,o.jsx)(i.h3,{id:"12-what-is-mjcf",children:"1.2 What is MJCF?"}),"\n",(0,o.jsx)(i.p,{children:"MJCF (MuJoCo XML Configuration Format) is the configuration file format used by the MuJoCo physics engine. It uses XML syntax to describe a complete physical simulation environment or part of it (e.g., a robot model). MJCF files define:"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsx)(i.li,{children:"World parameters (gravity, timestep, solver settings, etc.)"}),"\n",(0,o.jsx)(i.li,{children:"Bodies (hierarchical structure, parent-child relationships)"}),"\n",(0,o.jsx)(i.li,{children:"Geometries (visual/collision shapes: sphere, box, mesh, etc.)"}),"\n",(0,o.jsx)(i.li,{children:"Joints (degrees of freedom between bodies)"}),"\n",(0,o.jsx)(i.li,{children:"Physical properties (mass, inertia, friction, damping)"}),"\n",(0,o.jsx)(i.li,{children:"Assets (mesh files, textures, etc.)"}),"\n",(0,o.jsx)(i.li,{children:"Sensors and actuators"}),"\n"]}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.strong,{children:"Key MJCF tags:"})}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"<mujoco>"}),": Root element"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"<compiler>"}),": Compilation options (mesh directory, angle units, etc.)"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"<option>"}),": Global physical parameters"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"<asset>"}),": Resource definitions (mesh, texture, material)"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"<default>"}),": Default properties for elements"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"<worldbody>"}),": All bodies and lights in the scene"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"<include>"}),": Include other MJCF files for modular design"]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["The core task of mesh2mjcf.py is to convert input mesh files into MJCF-compliant ",(0,o.jsx)(i.code,{children:".xml"})," files for use in MuJoCo."]}),"\n",(0,o.jsx)(i.h2,{id:"2-physical-concepts",children:"2. Physical Concepts"}),"\n",(0,o.jsx)(i.p,{children:"Accurate definition of physical properties is crucial for simulation. mesh2mjcf.py allows users to specify mass and inertia tensor."}),"\n",(0,o.jsx)(i.h3,{id:"21-mass",children:"2.1 Mass"}),"\n",(0,o.jsxs)(i.p,{children:["Mass determines how much matter an object contains and affects its behavior in simulation (force, gravity, collision response). Default: ",(0,o.jsx)(i.code,{children:"0.001"})," kg."]}),"\n",(0,o.jsx)(i.h3,{id:"22-inertia-tensor",children:"2.2 Inertia Tensor"}),"\n",(0,o.jsxs)(i.p,{children:["Describes resistance to angular acceleration. Specified as three principal moments of inertia. Default: ",(0,o.jsx)(i.code,{children:"[2e-5, 2e-5, 2e-5]"}),"."]}),"\n",(0,o.jsx)(i.h2,{id:"3-convex-decomposition",children:"3. Convex Decomposition"}),"\n",(0,o.jsx)(i.h3,{id:"31-what-is-convex-decomposition",children:"3.1 What is Convex Decomposition?"}),"\n",(0,o.jsx)(i.p,{children:"The process of representing a complex non-convex shape as a set of convex shapes. This improves collision detection efficiency and accuracy in simulation."}),"\n",(0,o.jsx)(i.h3,{id:"32-in-mujoco",children:"3.2 In MuJoCo"}),"\n",(0,o.jsxs)(i.p,{children:["MuJoCo uses convex hulls for collision detection. For accurate physical interaction, complex meshes should be decomposed into multiple convex parts. mesh2mjcf.py uses the ",(0,o.jsx)(i.code,{children:"coacd"})," library for this purpose."]}),"\n",(0,o.jsx)(i.h2,{id:"4-mtl-material-and-multi-material-support",children:"4. MTL Material and Multi-material Support"}),"\n",(0,o.jsx)(i.p,{children:"MTL (Material Template Library) files define surface properties for OBJ meshes. mesh2mjcf.py supports automatic detection and processing of multi-material OBJ files, including texture handling and MJCF material definition."}),"\n",(0,o.jsx)(i.h2,{id:"5-dependencies",children:"5. Dependencies"}),"\n",(0,o.jsx)(i.p,{children:"To use all features of mesh2mjcf.py, install the following Python libraries:"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsx)(i.li,{children:"trimesh"}),"\n",(0,o.jsx)(i.li,{children:"coacd (for convex decomposition)"}),"\n",(0,o.jsx)(i.li,{children:"mujoco (for preview)"}),"\n"]}),"\n",(0,o.jsx)(i.p,{children:"Install with:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-bash",children:"pip install trimesh coacd mujoco\n"})}),"\n",(0,o.jsx)(i.h2,{id:"6-usage",children:"6. Usage"}),"\n",(0,o.jsx)(i.p,{children:"Run via command line:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-bash",children:"python scripts/mesh2mjcf.py <input_file_path> [options]\n"})}),"\n",(0,o.jsx)(i.p,{children:"Options include:"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"--rgba R G B A"}),": Set mesh color"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"--mass MASS"}),": Set mass"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"--diaginertia D D D"}),": Set inertia tensor"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"--free_joint"}),": Add free joint"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"-cd"}),"/",(0,o.jsx)(i.code,{children:"--convex_decomposition"}),": Enable convex decomposition"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"--verbose"}),": Preview model"]}),"\n"]}),"\n",(0,o.jsx)(i.h2,{id:"7-examples",children:"7. Examples"}),"\n",(0,o.jsx)(i.p,{children:"Basic conversion:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-bash",children:"python scripts/mesh2mjcf.py /path/to/model.obj\n"})}),"\n",(0,o.jsx)(i.p,{children:"Specify color:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-bash",children:"python scripts/mesh2mjcf.py /path/to/model.stl --rgba 0.8 0.2 0.2 1.0\n"})}),"\n",(0,o.jsx)(i.p,{children:"Add free joint:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-bash",children:"python scripts/mesh2mjcf.py /path/to/model.obj --free_joint\n"})}),"\n",(0,o.jsx)(i.p,{children:"Convex decomposition:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-bash",children:"python scripts/mesh2mjcf.py /path/to/model.obj -cd\n"})}),"\n",(0,o.jsx)(i.p,{children:"Preview model:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-bash",children:"python scripts/mesh2mjcf.py /path/to/model.obj --verbose\n"})}),"\n",(0,o.jsx)(i.h2,{id:"8-output-files",children:"8. Output Files"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:["Mesh files: ",(0,o.jsx)(i.code,{children:"meshes/object/{asset_name}/"})]}),"\n",(0,o.jsxs)(i.li,{children:["Asset dependency file: ",(0,o.jsx)(i.code,{children:"mjcf/object/{asset_name}_dependencies.xml"})]}),"\n",(0,o.jsxs)(i.li,{children:["Body definition file: ",(0,o.jsx)(i.code,{children:"mjcf/object/{asset_name}.xml"})]}),"\n",(0,o.jsx)(i.li,{children:"For multi-material OBJ: sub-mesh files and textures"}),"\n",(0,o.jsxs)(i.li,{children:["For preview: ",(0,o.jsx)(i.code,{children:"mjcf/_tmp_preview.xml"})]}),"\n"]}),"\n",(0,o.jsx)(i.p,{children:"With this tool, you can easily convert various 3D mesh files into MJCF format for MuJoCo simulation, supporting complex material handling and physical property settings."})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>t,x:()=>c});var n=s(6540);const o={},l=n.createContext(o);function t(e){const i=n.useContext(l);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),n.createElement(l.Provider,{value:i},e.children)}}}]);