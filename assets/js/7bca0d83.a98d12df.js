"use strict";(self.webpackChunkdiscoverse_docs=self.webpackChunkdiscoverse_docs||[]).push([[555],{5799:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"tutorials/imitation-learning/openpi","title":"OpenPI (Open-source Policy Interface)","description":"OpenPI is a policy fine-tuning method based on pre-trained models, enabling rapid prototyping and few-shot learning using pre-trained models.","source":"@site/docs/tutorials/imitation-learning/openpi.md","sourceDirName":"tutorials/imitation-learning","slug":"/tutorials/imitation-learning/openpi","permalink":"/DISCOVERSE-doc/docs/tutorials/imitation-learning/openpi","draft":false,"unlisted":false,"editUrl":"https://github.com/TATP-233/DISCOVERSE/tree/main/discoverse-docs/docs/tutorials/imitation-learning/openpi.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"RDT (Robotics Diffusion Transformer)","permalink":"/DISCOVERSE-doc/docs/tutorials/imitation-learning/rdt"},"next":{"title":"Modeling Overview","permalink":"/DISCOVERSE-doc/docs/tutorials/modeling/overview"}}');var o=t(4848),a=t(8453);const r={sidebar_position:6},s="OpenPI (Open-source Policy Interface)",c={},d=[{value:"\ud83d\udcca Data Format Conversion",id:"-data-format-conversion",level:2},{value:"Conversion Command",id:"conversion-command",level:3},{value:"Conversion Example",id:"conversion-example",level:4},{value:"Data Movement",id:"data-movement",level:3},{value:"Data Directory Structure",id:"data-directory-structure",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"openpi-open-source-policy-interface",children:"OpenPI (Open-source Policy Interface)"})}),"\n",(0,o.jsx)(n.p,{children:"OpenPI is a policy fine-tuning method based on pre-trained models, enabling rapid prototyping and few-shot learning using pre-trained models."}),"\n",(0,o.jsx)(n.h2,{id:"-data-format-conversion",children:"\ud83d\udcca Data Format Conversion"}),"\n",(0,o.jsx)(n.h3,{id:"conversion-command",children:"Conversion Command"}),"\n",(0,o.jsx)(n.p,{children:"Convert the raw data collected in simulation to the HDF5 format used by the pi0 algorithm:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cd DISCOVERSE\npython3 policies/act/data_process/raw_to_hdf5.py -md mujoco -dir data -tn ${task_name} -vn ${video_names}\n"})}),"\n",(0,o.jsx)(n.h4,{id:"conversion-example",children:"Conversion Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"python3 policies/act/data_process/raw_to_hdf5.py -md mujoco -dir data -tn block_place -vn cam_0 cam_1\n"})}),"\n",(0,o.jsx)(n.h3,{id:"data-movement",children:"Data Movement"}),"\n",(0,o.jsx)(n.p,{children:"Move the hdf5 file to the location required by pi0:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"mv data/hdf5/${task_name} policies/openpi/training_data\ncd policies/openpi/training_data/\nscp instructions/${task_name}.json ${task_name}/instructions.json\ncd ..\n"})}),"\n",(0,o.jsx)(n.h3,{id:"data-directory-structure",children:"Data Directory Structure"}),"\n",(0,o.jsx)(n.p,{children:"Place data for multiple tasks in training_data. Pi0 will train multiple tasks in one model. The directory structure is:"})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var i=t(6540);const o={},a=i.createContext(o);function r(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);