"use strict";(self.webpackChunkdiscoverse_docs=self.webpackChunkdiscoverse_docs||[]).push([[6747],{8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>r});var s=i(6540);const t={},o=s.createContext(t);function d(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(o.Provider,{value:n},e.children)}},9005:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"get-started/usage","title":"Usage Guide","description":"BaseConfig Class","source":"@site/docs/get-started/usage.md","sourceDirName":"get-started","slug":"/get-started/usage","permalink":"/DISCOVERSE-doc/docs/get-started/usage","draft":false,"unlisted":false,"editUrl":"https://github.com/TATP-233/DISCOVERSE/tree/main/discoverse-docs/docs/get-started/usage.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Real2Sim Asset Generation","permalink":"/DISCOVERSE-doc/docs/get-started/real2sim"},"next":{"title":"Troubleshooting Guide","permalink":"/DISCOVERSE-doc/docs/get-started/troubleshooting"}}');var t=i(4848),o=i(8453);const d={sidebar_position:5},r="Usage Guide",c={},l=[{value:"BaseConfig Class",id:"baseconfig-class",level:2},{value:"Step Function",id:"step-function",level:2},{value:"Tools",id:"tools",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"usage-guide",children:"Usage Guide"})}),"\n",(0,t.jsx)(n.h2,{id:"baseconfig-class",children:"BaseConfig Class"}),"\n",(0,t.jsx)(n.p,{children:"Configuration of the simulation environment, including the following contents:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"mjcf_file_path"}),": The simulation scene file, with the suffix ",(0,t.jsx)(n.code,{children:".xml"})," or ",(0,t.jsx)(n.code,{children:".mjb"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"timestep"}),": The time step of the physical simulation, in seconds."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"decimation"}),": Downsampling, and the time for each call to the ",(0,t.jsx)(n.code,{children:"step"})," simulation is $decimation \\times timestep$."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"sync"}),": Time synchronization. When set to ",(0,t.jsx)(n.code,{children:"True"}),", it will perform sleep during ",(0,t.jsx)(n.code,{children:"step"})," to keep the time speed of the simulation consistent with the real world. It is recommended to set it to ",(0,t.jsx)(n.code,{children:"True"})," during teleoperation and ",(0,t.jsx)(n.code,{children:"False"})," during automatic data generation, which will speed up the data generation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"headless"}),": Headless mode. If set to ",(0,t.jsx)(n.code,{children:"True"}),", the visualization window will not be displayed. It is recommended to set it to ",(0,t.jsx)(n.code,{children:"True"})," on devices without a display or during automatic data generation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"render_set"}),": Of dictionary type, used to set the frame rate, width, and height of the rendered image."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"obs_rgb_cam_id"}),": List of integers, used to set the ID of the RGB image acquisition camera."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"obs_depth_cam_id"}),": List of integers, used to set the ID of the depth map acquisition camera."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"use_gaussian_renderer"}),": When set to ",(0,t.jsx)(n.code,{children:"True"}),", 3dgs is used for high-fidelity rendering, otherwise the mujoco native renderer is used.\nThe following options are unique to high-fidelity rendering and do not need to be set when using the mujoco native renderer:"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rb_link_list"}),": The body name of the robot."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"obj_list"}),": The body name of the manipulated objects in the scene. Only objects appearing in ",(0,t.jsx)(n.code,{children:"rb_link_list"})," and ",(0,t.jsx)(n.code,{children:"obj_list"})," will appear during 3dgs rendering."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gs_model_dict"}),": Of dictionary type, where the key is the body name and the value is the path of the corresponding 3dgs ply file."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"step-function",children:"Step Function"}),"\n",(0,t.jsxs)(n.p,{children:["The agent interacts with the environment through the ",(0,t.jsx)(n.code,{children:"step()"})," function, executes an action, and receives the next observation, privileged observation, reward, done flag, and other additional information."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"observation, privileged_observation, reward, done, info = env.step(action)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"tools",children:"Tools"}),"\n",(0,t.jsxs)(n.p,{children:["There are some commonly used Python scripts in the ",(0,t.jsx)(n.code,{children:"scripts"})," path:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"convex_decomposition.ipynb"}),": [Convex decomposition of objects](doc/convex decomposition.md)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"urdf format"}),": Format the urdf file."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gaussainSplattingConvert.py"}),": Convert 3dgs ply models between binary and ASCII encoding."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gaussainSplattingTranspose.py"}),": Translate, rotate, and scale a single 3dgs ply model."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Other tools:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/kevinzakka/obj2mjcf",children:(0,t.jsx)(n.code,{children:"obj2mjcf"})}),": Convert obj files to mjcf format."]}),"\n",(0,t.jsxs)(n.li,{children:["View the mujoco scene in the terminal","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"python3 -m mujoco.viewer --mjcf=<PATH-TO-MJCF-FILE>\ne.g.\ncd models/mjcf\npython3 -m mujoco.viewer --mjcf=mmk2_floor.xml\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);