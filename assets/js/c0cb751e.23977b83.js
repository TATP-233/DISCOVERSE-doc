"use strict";(self.webpackChunkdiscoverse_docs=self.webpackChunkdiscoverse_docs||[]).push([[6839],{6718:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"tutorials/imitation-learning/rdt","title":"RDT (Robotics Diffusion Transformer)","description":"RDT (Robotics Diffusion Transformer) is a large model method combining diffusion models and Transformers, supporting unified modeling of multiple tasks and offering strong generalization capabilities.","source":"@site/docs/tutorials/imitation-learning/rdt.md","sourceDirName":"tutorials/imitation-learning","slug":"/tutorials/imitation-learning/rdt","permalink":"/DISCOVERSE-doc/docs/tutorials/imitation-learning/rdt","draft":false,"unlisted":false,"editUrl":"https://github.com/TATP-233/DISCOVERSE/tree/main/discoverse-docs/docs/tutorials/imitation-learning/rdt.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Diffusion Policy","permalink":"/DISCOVERSE-doc/docs/tutorials/imitation-learning/dp"},"next":{"title":"OpenPI (Open-source Policy Interface)","permalink":"/DISCOVERSE-doc/docs/tutorials/imitation-learning/openpi"}}');var t=i(4848),a=i(8453);const r={sidebar_position:5},s="RDT (Robotics Diffusion Transformer)",d={},l=[{value:"\ud83d\udcca Data Format Conversion",id:"-data-format-conversion",level:2},{value:"Conversion Command",id:"conversion-command",level:3},{value:"Conversion Example",id:"conversion-example",level:4},{value:"Data Movement",id:"data-movement",level:3},{value:"Example",id:"example",level:4}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"rdt-robotics-diffusion-transformer",children:"RDT (Robotics Diffusion Transformer)"})}),"\n",(0,t.jsx)(n.p,{children:"RDT (Robotics Diffusion Transformer) is a large model method combining diffusion models and Transformers, supporting unified modeling of multiple tasks and offering strong generalization capabilities."}),"\n",(0,t.jsx)(n.h2,{id:"-data-format-conversion",children:"\ud83d\udcca Data Format Conversion"}),"\n",(0,t.jsx)(n.h3,{id:"conversion-command",children:"Conversion Command"}),"\n",(0,t.jsx)(n.p,{children:"Convert the raw data collected in simulation to the HDF5 format used by the RDT algorithm:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"python3 policies/act/data_process/raw_to_hdf5.py -md mujoco -dir data -tn ${task_name} -vn ${video_names}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"conversion-example",children:"Conversion Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Example conversion\npython3 policies/act/data_process/raw_to_hdf5.py -md mujoco -dir data -tn block_place -vn cam_0 cam_1\n"})}),"\n",(0,t.jsx)(n.h3,{id:"data-movement",children:"Data Movement"}),"\n",(0,t.jsx)(n.p,{children:"Move the hdf5 file to the location required by RDT:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"mv data/hdf5/${task_name} policies/RDT/training_data\n"})}),"\n",(0,t.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"mv data/hdf5/block_place policies/RDT/training_data\n"})})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>s});var o=i(6540);const t={},a=o.createContext(t);function r(e){const n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);